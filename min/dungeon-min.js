const buildDungeon=(a,b,c,d,e,f,[g,h])=>{ctx.clearRect(0,0,b,a);const j=e*f-e,[k,l]=inverseCoords([g,h],j),m=[];for(let n=rng(3)+1;0<n;n--)m.push(generateRandomEndpoint([k,l],e,j,m));c.forEach((a,c)=>{const b=c;c*=f,COORDINATES[c]={},d.forEach((a,d)=>{let g,h;const i=d;d*=e;const n=Math.random(),o=k===c&&l===d;if(m.forEach(([e,a])=>{e==c&&a==d&&(g=e,h=a)}),COORDINATES[c][d]={},g==c){COORDINATES[c][d].walkable=1;let a;0==g?a=ctx.createLinearGradient(-20,0,20,0):g==j?a=ctx.createLinearGradient(240,0,260,0):0==h?a=ctx.createLinearGradient(0,-20,0,20):h==j&&(a=ctx.createLinearGradient(0,240,0,260)),0==c||0==d?(a.addColorStop(.2,"black"),a.addColorStop(1,"yellow")):(a.addColorStop(1,"black"),a.addColorStop(0,"yellow")),ctx.fillStyle=a,ctx.fillRect(c,d,f,e)}else 0==b||0==i||d==j||c==j?(COORDINATES[c][d].walkable=k==c&&l==d?1:0,ctx.fillStyle=k==c&&l==d?"white":"#1c1c1c",ctx.fillRect(c,d,f,e)):c<=j&&d<=j&&(COORDINATES[c][d].walkable=n<=WALKABLE_TILE_CHANCE||o?1:0,COORDINATES[c][d].walkable?null:COORDINATES[c][d].occupied=1,ctx.fillStyle=1===COORDINATES[c][d].walkable?"transparent":"#2b2b2b",ctx.fillRect(c,d,f,e))})});let n;for(let o=0;o<m.length;o++)if(checker(COORDINATES,[k,l],[k,l],m[o],[k,l],dir([k,l],e,j),e,[j,j])){n=!0;break}return n?void(generatePlayer([k,l],"white",COORDINATES,e,m),generateEnemies(lvl,j,COORDINATES,m),_dungeon.innerHTML=dungeon++):buildDungeon(a,b,c,d,e,f,[g,h])};