const weapons=[["Brass knuckles","Fists"],[""],["Pistol","Rifle","Sniper"]],enemyType=["Skeleton \uD83D\uDC80","Vampire \uD83E\uDDDB","Wizard \uD83E\uDDD9","Demon \uD83D\uDC79"],Character=function(a,b){const c=this;c.class=b,c.name=a,c.xp=0,c.nextLvl=100,c.lvl=1,c.hp=b?1==b?50:75:100,c.attackStrength=b&&1!=b?rng(3)+1:rng()+3,c.def=b?1==b?rng(2)+1:rng(3)+1:rng()+2,c.agility=b?1==b?rng(2)+1:rng(5)+3:rng()+2,c.actionsPerTurn=b?1==b?rng(2)+3:rng()+4:rng()+4,c.actionsLeft=c.actionsPerTurn,c.attackSpeed=Math.abs(c.attackStrength-c.actionsPerTurn),c.fov=b?rng()+4:rng(2)+2,c.items=[],c.checkIfNextLvl=function(){0>=c.nextLvl-c.xp?c.lvlUp():null},c.lvlUp=function(){c.nextLvl+=c.nextLvl+Math.pow(c.lvl,3),c.lvl++,_playerLvl.textContent=c.lvl,_expToNextLvl.textContent=player.nextLvl,c.addStat()},c.weapons=weapons[c.class],c.addStat=function(a){return 0===a?(c.attack=Math.ceil(1.2*c.attack),_attack.textContent=c.attack):1===a?(c.agility=Math.ceil(1.1*c.agility),_agility.textContent=c.agility):2===a?(c.def=Math.ceil(1.15*c.def),_defense.textContent=c.def):3===a?(c.actionsPerTurn=Math.ceil(1.1*c.actionsPerTurn),_speed.textContent=c.actionsPerTurn):void 0},c.currentCoord=[],c.move=function(){Math.abs(playerCoord[0]-c.currentCoord[0])/TILE_HEIGHT+Math.abs(playerCoord[1]-c.currentCoord[1])/TILE_HEIGHT},c.attackEnemy=function(a){const b=a.agility<rng(100)&&c.attack>a.def;return b?a.hp=a.hp-c.attack+a.def:0,b?`You hit for ${c.attack-a.def}!`:`${c.name} missed!`},c.inRange=[],c.checkFOV=function(){c.inRange=[],enemies.forEach(a=>{const b=Math.abs(a.coords[0]-playerCoord[0])/TILE_HEIGHT,d=Math.abs(a.coords[1]-playerCoord[1])/TILE_HEIGHT,e=Math.sqrt(b*b+d*d);if(e<=c.fov)return c.inRange.push(a)})},c.block,c.resetActions=function(){c.actionsLeft=c.actionsPerTurn,_actionsLeft.innerHTML=c.actionsLeft},c.turn=function(a,b=0,d){c.block=0,a?1==a?c.attackEnemy(b):2==a&&c.move(d):c.block+=c.turnSpeed}},Enemy=function(a,b){const c=this,d=rng(100);c.coords=a,c.class=60>d?0:85>d?2:1,c.name=enemyType[rng(3)],c.hp=Math.floor(Math.sqrt(b))+~~(b/10),c.attack=c.class&&1!=c.class?~~(b/(rng(11)+20)):Math.ceil(b/(rng(11)+10)),c.accuracy=c.class?1==c.class?60+rng(41):75+rng(6):65+rng(26),c.def=c.class?0:~~(b/(rng(21)+40)),c.fov=c.class?rng()+4:rng(2)+2,c.speed=0==c.class?6:1==c.class?3:4,c.playerSpotted=0,c.xp=b/5,c.atkChar=function(){const a=c.accuracy-player.agility>rng(100)&&player.def<c.attack;return a?player.hp=player.hp-c.attack+~~player.def:0,player.def>=c.attack?`You blocked ${c.name}'s attack!`:a?`${c.name} hit for ${c.attack}!`:`${c.name} missed!`},c.handleTurn=function(d){const[e,a]=c.coords,b=([c,a])=>{for(let b=0;b<d.length;b++)if(d[b][0]==c&&d[b][1]==a)return!0},f=[{pos:"top",coord:[e,a-TILE_WIDTH],available:COORDINATES[e]?.[a-TILE_WIDTH]?.walkable,occupied:COORDINATES[e]?.[a-TILE_WIDTH]?.occupied,checkIfExit:b("top",[e,a-TILE_WIDTH])},{pos:"right",coord:[e+TILE_WIDTH,a],available:COORDINATES[e+TILE_WIDTH]?.[a]?.walkable,occupied:COORDINATES[e+TILE_WIDTH]?.[a]?.occupied,checkIfExit:b("right",[e+TILE_WIDTH,a])},{pos:"bottom",coord:[e,a+TILE_WIDTH],available:COORDINATES[e]?.[a+TILE_WIDTH]?.walkable,occupied:COORDINATES[e]?.[a+TILE_WIDTH]?.occupied,checkIfExit:b("bottom",[e,a+TILE_WIDTH])},{pos:"left",coord:[e-TILE_WIDTH,a],available:COORDINATES[e-TILE_WIDTH]?.[a]?.walkable,occupied:COORDINATES[e]?.[a-TILE_WIDTH]?.occupied,checkIfExit:b("left",[e-TILE_WIDTH,a])}];let g=f.filter(a=>a.available&&!a.checkIfExit&&!a.occupied);if(player.checkFOV(),!c.checkFOV(c.playerSpotted)){if(c.playerSpotted){console.log(g);const[b,d]=[playerCoord[0]-e,playerCoord[1]-a];console.log(`DIFF COORD: ${[b,d]}`),g=g.filter(a=>"left"==a.pos?0>b:"right"==a.pos?0<b:"top"==a.pos?0>d:"bottom"==a.pos?0<d:void 0),console.log(g)}const b=rng(g.length);COORDINATES[e][a].occupied=0,ctx.clearRect(e,a,TILE_WIDTH,TILE_HEIGHT),c.coords=0<g.length?g[b].coord:c.coords;const{coords:[d,f]}=c;return ctx.fillStyle=COORDINATES[d]?.[f]?"#94040466":"transparent",ctx.fillRect(d,f,TILE_WIDTH,TILE_HEIGHT),COORDINATES[d][f].occupied=1}c.atkChar()},c.checkFOV=function(a=1){const b=Math.abs(c.coords[0]-playerCoord[0])/TILE_HEIGHT*a,d=Math.abs(c.coords[1]-playerCoord[1])/TILE_HEIGHT*a,e=~~Math.sqrt(b*b+d*d);return e<=this.fov?(c.playerSpotted=1,1):(c.playerSpotted=0,0)}};