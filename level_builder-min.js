const rooms=[],lvl=1,weapons=[["Brass knuckles","Fists","","",""],[],["Pistol","Rifle","Sniper"]],enemies=[["Skeleton","Vampire"],[""],[""]],rng=(t=4)=>Math.floor(Math.random()*t),round=t=>Math.round(t),Character=function(t,s){this.class=s,this.name=t,this.xp=0,this.lvl=1,this.hp=s?1==s?50:75:100,this.attack=s&&1==s?rng(3)+1:rng()+3,this.def=s?1==s?rng(2)+1:rng(3)+1:rng()+2,this.agility=s?1==s?rng(2)+1:rng()+1:rng(2)+1,this.speed=s&&1==s?rng(2)+3:rng()+4,this.fov=s?rng()+4:rng(2)+2,this.lvlUp=function(){xp>=404&&this.addStat()},this.weapons=weapons[this.class],this.addStat=function(){switch(stat){case 0:return this.attack=round(1.2*this.attack);case 1:return this.agility=round(1.1*this.agility);case 2:return this.def=round(1.15*this.def)}}},Enemy=function(t=1){this.class=rng(3),this.hp=Math.floor(Math.sqrt(t*rng(80)))+t*rng(10),this.attack=t+rng(10)+1-2*this.class,this.def=t*rng()+t,this.fov=2*this.class+t,this.speed=0==this.class?6:1==this.class?3:4,this.xp=10*t+rng(20),this.atkChar=function(t){const s=t.agility<rng(100);return s&&(t.hp,this.attack),s?`${enemies[this.class][rng(3)]} hit for ${this.attack}!`:enemies[this.class][rng(3)]+" missed!"}},Cell=function(t){this.tile=rng(100)<=90?1:0,this.danger=this.tile?0:rng()+1,this.enemies=t==rng()?new Enemy:0,this.treasure=1==rng(100)?1:0},RoomBuilder=function(t,s=10,i=1){this.paths=t.map(()=>rng()),this.cells=[],this.addCells=function(){for(let t=0;t<s;t++)this.cells.push(new Cell(rng(this.cells.filter(t=>t.enemies).length<Math.sqrt(2)?20:-1)))}},buildLevel=t=>{for(let s=0;s<t;s++){const t=new RoomBuilder;t.addCells(),rooms.push(t)}};buildLevel(5);